// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Tweet.proto

#include "Tweet.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Tweet_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorReturn_Tweet_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Tweet_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TweetIn_Tweet_2eproto;
namespace proto {
class ErrorReturnDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ErrorReturn> _instance;
} _ErrorReturn_default_instance_;
class TweetInDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TweetIn> _instance;
} _TweetIn_default_instance_;
class TweetOutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TweetOut> _instance;
} _TweetOut_default_instance_;
class FollowInDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FollowIn> _instance;
} _FollowIn_default_instance_;
class FollowOutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FollowOut> _instance;
} _FollowOut_default_instance_;
class ShowInDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowIn> _instance;
} _ShowIn_default_instance_;
class ShowOutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShowOut> _instance;
} _ShowOut_default_instance_;
class LoginInDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginIn> _instance;
} _LoginIn_default_instance_;
class LoginOutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginOut> _instance;
} _LoginOut_default_instance_;
class LogoutInDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogoutIn> _instance;
} _LogoutIn_default_instance_;
class LogoutOutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogoutOut> _instance;
} _LogoutOut_default_instance_;
class RegisterInDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterIn> _instance;
} _RegisterIn_default_instance_;
class RegisterOutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterOut> _instance;
} _RegisterOut_default_instance_;
}  // namespace proto
static void InitDefaultsscc_info_ErrorReturn_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ErrorReturn_default_instance_;
    new (ptr) ::proto::ErrorReturn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ErrorReturn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorReturn_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ErrorReturn_Tweet_2eproto}, {}};

static void InitDefaultsscc_info_FollowIn_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_FollowIn_default_instance_;
    new (ptr) ::proto::FollowIn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::FollowIn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FollowIn_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FollowIn_Tweet_2eproto}, {}};

static void InitDefaultsscc_info_FollowOut_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_FollowOut_default_instance_;
    new (ptr) ::proto::FollowOut();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::FollowOut::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FollowOut_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FollowOut_Tweet_2eproto}, {
      &scc_info_ErrorReturn_Tweet_2eproto.base,}};

static void InitDefaultsscc_info_LoginIn_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_LoginIn_default_instance_;
    new (ptr) ::proto::LoginIn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::LoginIn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginIn_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoginIn_Tweet_2eproto}, {}};

static void InitDefaultsscc_info_LoginOut_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_LoginOut_default_instance_;
    new (ptr) ::proto::LoginOut();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::LoginOut::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoginOut_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoginOut_Tweet_2eproto}, {
      &scc_info_ErrorReturn_Tweet_2eproto.base,}};

static void InitDefaultsscc_info_LogoutIn_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_LogoutIn_default_instance_;
    new (ptr) ::proto::LogoutIn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::LogoutIn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogoutIn_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogoutIn_Tweet_2eproto}, {}};

static void InitDefaultsscc_info_LogoutOut_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_LogoutOut_default_instance_;
    new (ptr) ::proto::LogoutOut();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::LogoutOut::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LogoutOut_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LogoutOut_Tweet_2eproto}, {
      &scc_info_ErrorReturn_Tweet_2eproto.base,}};

static void InitDefaultsscc_info_RegisterIn_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_RegisterIn_default_instance_;
    new (ptr) ::proto::RegisterIn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::RegisterIn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterIn_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterIn_Tweet_2eproto}, {}};

static void InitDefaultsscc_info_RegisterOut_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_RegisterOut_default_instance_;
    new (ptr) ::proto::RegisterOut();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::RegisterOut::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterOut_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterOut_Tweet_2eproto}, {
      &scc_info_ErrorReturn_Tweet_2eproto.base,}};

static void InitDefaultsscc_info_ShowIn_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowIn_default_instance_;
    new (ptr) ::proto::ShowIn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowIn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShowIn_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShowIn_Tweet_2eproto}, {}};

static void InitDefaultsscc_info_ShowOut_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ShowOut_default_instance_;
    new (ptr) ::proto::ShowOut();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ShowOut::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ShowOut_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ShowOut_Tweet_2eproto}, {
      &scc_info_TweetIn_Tweet_2eproto.base,
      &scc_info_ErrorReturn_Tweet_2eproto.base,}};

static void InitDefaultsscc_info_TweetIn_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_TweetIn_default_instance_;
    new (ptr) ::proto::TweetIn();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::TweetIn::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TweetIn_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TweetIn_Tweet_2eproto}, {}};

static void InitDefaultsscc_info_TweetOut_Tweet_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_TweetOut_default_instance_;
    new (ptr) ::proto::TweetOut();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::TweetOut::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TweetOut_Tweet_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TweetOut_Tweet_2eproto}, {
      &scc_info_ErrorReturn_Tweet_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Tweet_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Tweet_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Tweet_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Tweet_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ErrorReturn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ErrorReturn, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::TweetIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::TweetIn, user_),
  PROTOBUF_FIELD_OFFSET(::proto::TweetIn, content_),
  PROTOBUF_FIELD_OFFSET(::proto::TweetIn, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::TweetOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::TweetOut, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::FollowIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::FollowIn, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::FollowOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::FollowOut, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowIn, user_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ShowOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::ShowOut, tweets_),
  PROTOBUF_FIELD_OFFSET(::proto::ShowOut, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::LoginIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::LoginIn, user_),
  PROTOBUF_FIELD_OFFSET(::proto::LoginIn, pass_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::LoginOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::LoginOut, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::LogoutIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::LogoutOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::LogoutOut, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RegisterIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::RegisterIn, name_),
  PROTOBUF_FIELD_OFFSET(::proto::RegisterIn, pass_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RegisterOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::RegisterOut, error_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::ErrorReturn)},
  { 6, -1, sizeof(::proto::TweetIn)},
  { 14, -1, sizeof(::proto::TweetOut)},
  { 20, -1, sizeof(::proto::FollowIn)},
  { 26, -1, sizeof(::proto::FollowOut)},
  { 32, -1, sizeof(::proto::ShowIn)},
  { 38, -1, sizeof(::proto::ShowOut)},
  { 45, -1, sizeof(::proto::LoginIn)},
  { 52, -1, sizeof(::proto::LoginOut)},
  { 58, -1, sizeof(::proto::LogoutIn)},
  { 63, -1, sizeof(::proto::LogoutOut)},
  { 69, -1, sizeof(::proto::RegisterIn)},
  { 76, -1, sizeof(::proto::RegisterOut)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ErrorReturn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_TweetIn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_TweetOut_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_FollowIn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_FollowOut_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowIn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_ShowOut_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_LoginIn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_LoginOut_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_LogoutIn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_LogoutOut_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_RegisterIn_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_RegisterOut_default_instance_),
};

const char descriptor_table_protodef_Tweet_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013Tweet.proto\022\005proto\"t\n\013ErrorReturn\022/\n\004c"
  "ode\030\001 \001(\0162!.proto.ErrorReturn.ReturnCode"
  "Enum\"4\n\016ReturnCodeEnum\022\t\n\005ERROR\020\000\022\013\n\007SUC"
  "CESS\020\001\022\n\n\006LOGOUT\020\002\"6\n\007TweetIn\022\014\n\004user\030\001 "
  "\001(\t\022\017\n\007content\030\002 \001(\t\022\014\n\004time\030\003 \001(\003\"-\n\010Tw"
  "eetOut\022!\n\005error\030\001 \001(\0132\022.proto.ErrorRetur"
  "n\"\030\n\010FollowIn\022\014\n\004name\030\001 \001(\t\".\n\tFollowOut"
  "\022!\n\005error\030\001 \001(\0132\022.proto.ErrorReturn\"\026\n\006S"
  "howIn\022\014\n\004user\030\001 \001(\t\"L\n\007ShowOut\022\036\n\006tweets"
  "\030\001 \003(\0132\016.proto.TweetIn\022!\n\005error\030\002 \001(\0132\022."
  "proto.ErrorReturn\"%\n\007LoginIn\022\014\n\004user\030\001 \001"
  "(\t\022\014\n\004pass\030\002 \001(\t\"-\n\010LoginOut\022!\n\005error\030\001 "
  "\001(\0132\022.proto.ErrorReturn\"\n\n\010LogoutIn\".\n\tL"
  "ogoutOut\022!\n\005error\030\001 \001(\0132\022.proto.ErrorRet"
  "urn\"(\n\nRegisterIn\022\014\n\004name\030\001 \001(\t\022\014\n\004pass\030"
  "\002 \001(\t\"0\n\013RegisterOut\022!\n\005error\030\001 \001(\0132\022.pr"
  "oto.ErrorReturn2\242\002\n\014TweetService\022*\n\005Twee"
  "t\022\016.proto.TweetIn\032\017.proto.TweetOut\"\000\022-\n\006"
  "Follow\022\017.proto.FollowIn\032\020.proto.FollowOu"
  "t\"\000\022\'\n\004Show\022\r.proto.ShowIn\032\016.proto.ShowO"
  "ut\"\000\022*\n\005Login\022\016.proto.LoginIn\032\017.proto.Lo"
  "ginOut\"\000\022-\n\006Logout\022\017.proto.LogoutIn\032\020.pr"
  "oto.LogoutOut\"\000\0223\n\010Register\022\021.proto.Regi"
  "sterIn\032\022.proto.RegisterOut\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Tweet_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Tweet_2eproto_sccs[13] = {
  &scc_info_ErrorReturn_Tweet_2eproto.base,
  &scc_info_FollowIn_Tweet_2eproto.base,
  &scc_info_FollowOut_Tweet_2eproto.base,
  &scc_info_LoginIn_Tweet_2eproto.base,
  &scc_info_LoginOut_Tweet_2eproto.base,
  &scc_info_LogoutIn_Tweet_2eproto.base,
  &scc_info_LogoutOut_Tweet_2eproto.base,
  &scc_info_RegisterIn_Tweet_2eproto.base,
  &scc_info_RegisterOut_Tweet_2eproto.base,
  &scc_info_ShowIn_Tweet_2eproto.base,
  &scc_info_ShowOut_Tweet_2eproto.base,
  &scc_info_TweetIn_Tweet_2eproto.base,
  &scc_info_TweetOut_Tweet_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Tweet_2eproto_once;
static bool descriptor_table_Tweet_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Tweet_2eproto = {
  &descriptor_table_Tweet_2eproto_initialized, descriptor_table_protodef_Tweet_2eproto, "Tweet.proto", 956,
  &descriptor_table_Tweet_2eproto_once, descriptor_table_Tweet_2eproto_sccs, descriptor_table_Tweet_2eproto_deps, 13, 0,
  schemas, file_default_instances, TableStruct_Tweet_2eproto::offsets,
  file_level_metadata_Tweet_2eproto, 13, file_level_enum_descriptors_Tweet_2eproto, file_level_service_descriptors_Tweet_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Tweet_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Tweet_2eproto), true);
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ErrorReturn_ReturnCodeEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Tweet_2eproto);
  return file_level_enum_descriptors_Tweet_2eproto[0];
}
bool ErrorReturn_ReturnCodeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ErrorReturn_ReturnCodeEnum ErrorReturn::ERROR;
constexpr ErrorReturn_ReturnCodeEnum ErrorReturn::SUCCESS;
constexpr ErrorReturn_ReturnCodeEnum ErrorReturn::LOGOUT;
constexpr ErrorReturn_ReturnCodeEnum ErrorReturn::ReturnCodeEnum_MIN;
constexpr ErrorReturn_ReturnCodeEnum ErrorReturn::ReturnCodeEnum_MAX;
constexpr int ErrorReturn::ReturnCodeEnum_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ErrorReturn::InitAsDefaultInstance() {
}
class ErrorReturn::_Internal {
 public:
};

ErrorReturn::ErrorReturn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ErrorReturn)
}
ErrorReturn::ErrorReturn(const ErrorReturn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:proto.ErrorReturn)
}

void ErrorReturn::SharedCtor() {
  code_ = 0;
}

ErrorReturn::~ErrorReturn() {
  // @@protoc_insertion_point(destructor:proto.ErrorReturn)
  SharedDtor();
}

void ErrorReturn::SharedDtor() {
}

void ErrorReturn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorReturn& ErrorReturn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ErrorReturn_Tweet_2eproto.base);
  return *internal_default_instance();
}


void ErrorReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ErrorReturn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear();
}

const char* ErrorReturn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.ErrorReturn.ReturnCodeEnum code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_code(static_cast<::proto::ErrorReturn_ReturnCodeEnum>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ErrorReturn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ErrorReturn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ErrorReturn.ReturnCodeEnum code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ErrorReturn)
  return target;
}

size_t ErrorReturn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ErrorReturn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ErrorReturn.ReturnCodeEnum code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorReturn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ErrorReturn)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorReturn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ErrorReturn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ErrorReturn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ErrorReturn)
    MergeFrom(*source);
  }
}

void ErrorReturn::MergeFrom(const ErrorReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ErrorReturn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void ErrorReturn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ErrorReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorReturn::CopyFrom(const ErrorReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ErrorReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorReturn::IsInitialized() const {
  return true;
}

void ErrorReturn::InternalSwap(ErrorReturn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorReturn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TweetIn::InitAsDefaultInstance() {
}
class TweetIn::_Internal {
 public:
};

TweetIn::TweetIn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TweetIn)
}
TweetIn::TweetIn(const TweetIn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:proto.TweetIn)
}

void TweetIn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TweetIn_Tweet_2eproto.base);
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_ = PROTOBUF_LONGLONG(0);
}

TweetIn::~TweetIn() {
  // @@protoc_insertion_point(destructor:proto.TweetIn)
  SharedDtor();
}

void TweetIn::SharedDtor() {
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TweetIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TweetIn& TweetIn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TweetIn_Tweet_2eproto.base);
  return *internal_default_instance();
}


void TweetIn::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TweetIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* TweetIn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.TweetIn.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.TweetIn.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TweetIn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.TweetIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.TweetIn.user");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.TweetIn.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TweetIn)
  return target;
}

size_t TweetIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TweetIn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // int64 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TweetIn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TweetIn)
  GOOGLE_DCHECK_NE(&from, this);
  const TweetIn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TweetIn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TweetIn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TweetIn)
    MergeFrom(*source);
  }
}

void TweetIn::MergeFrom(const TweetIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TweetIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.time() != 0) {
    _internal_set_time(from._internal_time());
  }
}

void TweetIn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TweetIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TweetIn::CopyFrom(const TweetIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TweetIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TweetIn::IsInitialized() const {
  return true;
}

void TweetIn::InternalSwap(TweetIn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TweetIn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TweetOut::InitAsDefaultInstance() {
  ::proto::_TweetOut_default_instance_._instance.get_mutable()->error_ = const_cast< ::proto::ErrorReturn*>(
      ::proto::ErrorReturn::internal_default_instance());
}
class TweetOut::_Internal {
 public:
  static const ::proto::ErrorReturn& error(const TweetOut* msg);
};

const ::proto::ErrorReturn&
TweetOut::_Internal::error(const TweetOut* msg) {
  return *msg->error_;
}
TweetOut::TweetOut()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TweetOut)
}
TweetOut::TweetOut(const TweetOut& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::proto::ErrorReturn(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.TweetOut)
}

void TweetOut::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TweetOut_Tweet_2eproto.base);
  error_ = nullptr;
}

TweetOut::~TweetOut() {
  // @@protoc_insertion_point(destructor:proto.TweetOut)
  SharedDtor();
}

void TweetOut::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void TweetOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TweetOut& TweetOut::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TweetOut_Tweet_2eproto.base);
  return *internal_default_instance();
}


void TweetOut::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TweetOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear();
}

const char* TweetOut::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.ErrorReturn error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TweetOut::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.TweetOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TweetOut)
  return target;
}

size_t TweetOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TweetOut)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TweetOut::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TweetOut)
  GOOGLE_DCHECK_NE(&from, this);
  const TweetOut* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TweetOut>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TweetOut)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TweetOut)
    MergeFrom(*source);
  }
}

void TweetOut::MergeFrom(const TweetOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TweetOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    _internal_mutable_error()->::proto::ErrorReturn::MergeFrom(from._internal_error());
  }
}

void TweetOut::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TweetOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TweetOut::CopyFrom(const TweetOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TweetOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TweetOut::IsInitialized() const {
  return true;
}

void TweetOut::InternalSwap(TweetOut* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TweetOut::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FollowIn::InitAsDefaultInstance() {
}
class FollowIn::_Internal {
 public:
};

FollowIn::FollowIn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FollowIn)
}
FollowIn::FollowIn(const FollowIn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.FollowIn)
}

void FollowIn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FollowIn_Tweet_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FollowIn::~FollowIn() {
  // @@protoc_insertion_point(destructor:proto.FollowIn)
  SharedDtor();
}

void FollowIn::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FollowIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FollowIn& FollowIn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FollowIn_Tweet_2eproto.base);
  return *internal_default_instance();
}


void FollowIn::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FollowIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* FollowIn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.FollowIn.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FollowIn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.FollowIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.FollowIn.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FollowIn)
  return target;
}

size_t FollowIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FollowIn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FollowIn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FollowIn)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowIn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FollowIn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FollowIn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FollowIn)
    MergeFrom(*source);
  }
}

void FollowIn::MergeFrom(const FollowIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FollowIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void FollowIn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FollowIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowIn::CopyFrom(const FollowIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FollowIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowIn::IsInitialized() const {
  return true;
}

void FollowIn::InternalSwap(FollowIn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata FollowIn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FollowOut::InitAsDefaultInstance() {
  ::proto::_FollowOut_default_instance_._instance.get_mutable()->error_ = const_cast< ::proto::ErrorReturn*>(
      ::proto::ErrorReturn::internal_default_instance());
}
class FollowOut::_Internal {
 public:
  static const ::proto::ErrorReturn& error(const FollowOut* msg);
};

const ::proto::ErrorReturn&
FollowOut::_Internal::error(const FollowOut* msg) {
  return *msg->error_;
}
FollowOut::FollowOut()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FollowOut)
}
FollowOut::FollowOut(const FollowOut& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::proto::ErrorReturn(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.FollowOut)
}

void FollowOut::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FollowOut_Tweet_2eproto.base);
  error_ = nullptr;
}

FollowOut::~FollowOut() {
  // @@protoc_insertion_point(destructor:proto.FollowOut)
  SharedDtor();
}

void FollowOut::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void FollowOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FollowOut& FollowOut::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FollowOut_Tweet_2eproto.base);
  return *internal_default_instance();
}


void FollowOut::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FollowOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear();
}

const char* FollowOut::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.ErrorReturn error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FollowOut::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.FollowOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FollowOut)
  return target;
}

size_t FollowOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FollowOut)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FollowOut::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FollowOut)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowOut* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FollowOut>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FollowOut)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FollowOut)
    MergeFrom(*source);
  }
}

void FollowOut::MergeFrom(const FollowOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FollowOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    _internal_mutable_error()->::proto::ErrorReturn::MergeFrom(from._internal_error());
  }
}

void FollowOut::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FollowOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowOut::CopyFrom(const FollowOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FollowOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowOut::IsInitialized() const {
  return true;
}

void FollowOut::InternalSwap(FollowOut* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FollowOut::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowIn::InitAsDefaultInstance() {
}
class ShowIn::_Internal {
 public:
};

ShowIn::ShowIn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ShowIn)
}
ShowIn::ShowIn(const ShowIn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowIn)
}

void ShowIn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowIn_Tweet_2eproto.base);
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShowIn::~ShowIn() {
  // @@protoc_insertion_point(destructor:proto.ShowIn)
  SharedDtor();
}

void ShowIn::SharedDtor() {
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShowIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowIn& ShowIn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowIn_Tweet_2eproto.base);
  return *internal_default_instance();
}


void ShowIn::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ShowIn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.ShowIn.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowIn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ShowIn.user");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowIn)
  return target;
}

size_t ShowIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowIn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowIn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowIn)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowIn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowIn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowIn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowIn)
    MergeFrom(*source);
  }
}

void ShowIn::MergeFrom(const ShowIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
}

void ShowIn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowIn::CopyFrom(const ShowIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowIn::IsInitialized() const {
  return true;
}

void ShowIn::InternalSwap(ShowIn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowIn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShowOut::InitAsDefaultInstance() {
  ::proto::_ShowOut_default_instance_._instance.get_mutable()->error_ = const_cast< ::proto::ErrorReturn*>(
      ::proto::ErrorReturn::internal_default_instance());
}
class ShowOut::_Internal {
 public:
  static const ::proto::ErrorReturn& error(const ShowOut* msg);
};

const ::proto::ErrorReturn&
ShowOut::_Internal::error(const ShowOut* msg) {
  return *msg->error_;
}
ShowOut::ShowOut()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ShowOut)
}
ShowOut::ShowOut(const ShowOut& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      tweets_(from.tweets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::proto::ErrorReturn(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ShowOut)
}

void ShowOut::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShowOut_Tweet_2eproto.base);
  error_ = nullptr;
}

ShowOut::~ShowOut() {
  // @@protoc_insertion_point(destructor:proto.ShowOut)
  SharedDtor();
}

void ShowOut::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void ShowOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShowOut& ShowOut::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShowOut_Tweet_2eproto.base);
  return *internal_default_instance();
}


void ShowOut::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tweets_.Clear();
  if (GetArenaNoVirtual() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ShowOut::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .proto.TweetIn tweets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tweets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .proto.ErrorReturn error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShowOut::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.TweetIn tweets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tweets_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_tweets(i), target, stream);
  }

  // .proto.ErrorReturn error = 2;
  if (this->has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowOut)
  return target;
}

size_t ShowOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowOut)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.TweetIn tweets = 1;
  total_size += 1UL * this->_internal_tweets_size();
  for (const auto& msg : this->tweets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ErrorReturn error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShowOut::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowOut)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowOut* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShowOut>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowOut)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowOut)
    MergeFrom(*source);
  }
}

void ShowOut::MergeFrom(const ShowOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tweets_.MergeFrom(from.tweets_);
  if (from.has_error()) {
    _internal_mutable_error()->::proto::ErrorReturn::MergeFrom(from._internal_error());
  }
}

void ShowOut::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowOut::CopyFrom(const ShowOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowOut::IsInitialized() const {
  return true;
}

void ShowOut::InternalSwap(ShowOut* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tweets_.InternalSwap(&other->tweets_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShowOut::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoginIn::InitAsDefaultInstance() {
}
class LoginIn::_Internal {
 public:
};

LoginIn::LoginIn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LoginIn)
}
LoginIn::LoginIn(const LoginIn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  pass_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pass().empty()) {
    pass_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.LoginIn)
}

void LoginIn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginIn_Tweet_2eproto.base);
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LoginIn::~LoginIn() {
  // @@protoc_insertion_point(destructor:proto.LoginIn)
  SharedDtor();
}

void LoginIn::SharedDtor() {
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginIn& LoginIn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginIn_Tweet_2eproto.base);
  return *internal_default_instance();
}


void LoginIn::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LoginIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pass_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* LoginIn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.LoginIn.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pass = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pass();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.LoginIn.pass"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginIn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.LoginIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.LoginIn.user");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user(), target);
  }

  // string pass = 2;
  if (this->pass().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pass().data(), static_cast<int>(this->_internal_pass().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.LoginIn.pass");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pass(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LoginIn)
  return target;
}

size_t LoginIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LoginIn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string pass = 2;
  if (this->pass().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pass());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginIn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LoginIn)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginIn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginIn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LoginIn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LoginIn)
    MergeFrom(*source);
  }
}

void LoginIn::MergeFrom(const LoginIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LoginIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.pass().size() > 0) {

    pass_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
}

void LoginIn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LoginIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginIn::CopyFrom(const LoginIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LoginIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginIn::IsInitialized() const {
  return true;
}

void LoginIn::InternalSwap(LoginIn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pass_.Swap(&other->pass_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginIn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoginOut::InitAsDefaultInstance() {
  ::proto::_LoginOut_default_instance_._instance.get_mutable()->error_ = const_cast< ::proto::ErrorReturn*>(
      ::proto::ErrorReturn::internal_default_instance());
}
class LoginOut::_Internal {
 public:
  static const ::proto::ErrorReturn& error(const LoginOut* msg);
};

const ::proto::ErrorReturn&
LoginOut::_Internal::error(const LoginOut* msg) {
  return *msg->error_;
}
LoginOut::LoginOut()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LoginOut)
}
LoginOut::LoginOut(const LoginOut& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::proto::ErrorReturn(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.LoginOut)
}

void LoginOut::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginOut_Tweet_2eproto.base);
  error_ = nullptr;
}

LoginOut::~LoginOut() {
  // @@protoc_insertion_point(destructor:proto.LoginOut)
  SharedDtor();
}

void LoginOut::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void LoginOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginOut& LoginOut::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginOut_Tweet_2eproto.base);
  return *internal_default_instance();
}


void LoginOut::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LoginOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear();
}

const char* LoginOut::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.ErrorReturn error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginOut::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.LoginOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LoginOut)
  return target;
}

size_t LoginOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LoginOut)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginOut::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LoginOut)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginOut* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginOut>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LoginOut)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LoginOut)
    MergeFrom(*source);
  }
}

void LoginOut::MergeFrom(const LoginOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LoginOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    _internal_mutable_error()->::proto::ErrorReturn::MergeFrom(from._internal_error());
  }
}

void LoginOut::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LoginOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginOut::CopyFrom(const LoginOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LoginOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginOut::IsInitialized() const {
  return true;
}

void LoginOut::InternalSwap(LoginOut* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginOut::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogoutIn::InitAsDefaultInstance() {
}
class LogoutIn::_Internal {
 public:
};

LogoutIn::LogoutIn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LogoutIn)
}
LogoutIn::LogoutIn(const LogoutIn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.LogoutIn)
}

void LogoutIn::SharedCtor() {
}

LogoutIn::~LogoutIn() {
  // @@protoc_insertion_point(destructor:proto.LogoutIn)
  SharedDtor();
}

void LogoutIn::SharedDtor() {
}

void LogoutIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogoutIn& LogoutIn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogoutIn_Tweet_2eproto.base);
  return *internal_default_instance();
}


void LogoutIn::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LogoutIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* LogoutIn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogoutIn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.LogoutIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LogoutIn)
  return target;
}

size_t LogoutIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LogoutIn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogoutIn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LogoutIn)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutIn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogoutIn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LogoutIn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LogoutIn)
    MergeFrom(*source);
  }
}

void LogoutIn::MergeFrom(const LogoutIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LogoutIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LogoutIn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LogoutIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutIn::CopyFrom(const LogoutIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LogoutIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutIn::IsInitialized() const {
  return true;
}

void LogoutIn::InternalSwap(LogoutIn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogoutIn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LogoutOut::InitAsDefaultInstance() {
  ::proto::_LogoutOut_default_instance_._instance.get_mutable()->error_ = const_cast< ::proto::ErrorReturn*>(
      ::proto::ErrorReturn::internal_default_instance());
}
class LogoutOut::_Internal {
 public:
  static const ::proto::ErrorReturn& error(const LogoutOut* msg);
};

const ::proto::ErrorReturn&
LogoutOut::_Internal::error(const LogoutOut* msg) {
  return *msg->error_;
}
LogoutOut::LogoutOut()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LogoutOut)
}
LogoutOut::LogoutOut(const LogoutOut& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::proto::ErrorReturn(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.LogoutOut)
}

void LogoutOut::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogoutOut_Tweet_2eproto.base);
  error_ = nullptr;
}

LogoutOut::~LogoutOut() {
  // @@protoc_insertion_point(destructor:proto.LogoutOut)
  SharedDtor();
}

void LogoutOut::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void LogoutOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogoutOut& LogoutOut::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogoutOut_Tweet_2eproto.base);
  return *internal_default_instance();
}


void LogoutOut::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LogoutOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear();
}

const char* LogoutOut::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.ErrorReturn error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogoutOut::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.LogoutOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LogoutOut)
  return target;
}

size_t LogoutOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LogoutOut)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogoutOut::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LogoutOut)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutOut* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogoutOut>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LogoutOut)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LogoutOut)
    MergeFrom(*source);
  }
}

void LogoutOut::MergeFrom(const LogoutOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LogoutOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    _internal_mutable_error()->::proto::ErrorReturn::MergeFrom(from._internal_error());
  }
}

void LogoutOut::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LogoutOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutOut::CopyFrom(const LogoutOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LogoutOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutOut::IsInitialized() const {
  return true;
}

void LogoutOut::InternalSwap(LogoutOut* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogoutOut::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterIn::InitAsDefaultInstance() {
}
class RegisterIn::_Internal {
 public:
};

RegisterIn::RegisterIn()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegisterIn)
}
RegisterIn::RegisterIn(const RegisterIn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  pass_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pass().empty()) {
    pass_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RegisterIn)
}

void RegisterIn::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterIn_Tweet_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterIn::~RegisterIn() {
  // @@protoc_insertion_point(destructor:proto.RegisterIn)
  SharedDtor();
}

void RegisterIn::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterIn& RegisterIn::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterIn_Tweet_2eproto.base);
  return *internal_default_instance();
}


void RegisterIn::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegisterIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pass_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* RegisterIn::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.RegisterIn.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pass = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pass();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.RegisterIn.pass"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterIn::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegisterIn)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.RegisterIn.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string pass = 2;
  if (this->pass().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pass().data(), static_cast<int>(this->_internal_pass().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.RegisterIn.pass");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pass(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegisterIn)
  return target;
}

size_t RegisterIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegisterIn)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string pass = 2;
  if (this->pass().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pass());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterIn::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegisterIn)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterIn* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterIn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegisterIn)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegisterIn)
    MergeFrom(*source);
  }
}

void RegisterIn::MergeFrom(const RegisterIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegisterIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.pass().size() > 0) {

    pass_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
}

void RegisterIn::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegisterIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterIn::CopyFrom(const RegisterIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegisterIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterIn::IsInitialized() const {
  return true;
}

void RegisterIn::InternalSwap(RegisterIn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pass_.Swap(&other->pass_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterIn::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterOut::InitAsDefaultInstance() {
  ::proto::_RegisterOut_default_instance_._instance.get_mutable()->error_ = const_cast< ::proto::ErrorReturn*>(
      ::proto::ErrorReturn::internal_default_instance());
}
class RegisterOut::_Internal {
 public:
  static const ::proto::ErrorReturn& error(const RegisterOut* msg);
};

const ::proto::ErrorReturn&
RegisterOut::_Internal::error(const RegisterOut* msg) {
  return *msg->error_;
}
RegisterOut::RegisterOut()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegisterOut)
}
RegisterOut::RegisterOut(const RegisterOut& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::proto::ErrorReturn(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.RegisterOut)
}

void RegisterOut::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterOut_Tweet_2eproto.base);
  error_ = nullptr;
}

RegisterOut::~RegisterOut() {
  // @@protoc_insertion_point(destructor:proto.RegisterOut)
  SharedDtor();
}

void RegisterOut::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void RegisterOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterOut& RegisterOut::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterOut_Tweet_2eproto.base);
  return *internal_default_instance();
}


void RegisterOut::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegisterOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear();
}

const char* RegisterOut::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.ErrorReturn error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterOut::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegisterOut)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegisterOut)
  return target;
}

size_t RegisterOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegisterOut)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ErrorReturn error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterOut::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegisterOut)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterOut* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterOut>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegisterOut)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegisterOut)
    MergeFrom(*source);
  }
}

void RegisterOut::MergeFrom(const RegisterOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegisterOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    _internal_mutable_error()->::proto::ErrorReturn::MergeFrom(from._internal_error());
  }
}

void RegisterOut::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegisterOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterOut::CopyFrom(const RegisterOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegisterOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterOut::IsInitialized() const {
  return true;
}

void RegisterOut::InternalSwap(RegisterOut* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterOut::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::ErrorReturn* Arena::CreateMaybeMessage< ::proto::ErrorReturn >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ErrorReturn >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::TweetIn* Arena::CreateMaybeMessage< ::proto::TweetIn >(Arena* arena) {
  return Arena::CreateInternal< ::proto::TweetIn >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::TweetOut* Arena::CreateMaybeMessage< ::proto::TweetOut >(Arena* arena) {
  return Arena::CreateInternal< ::proto::TweetOut >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::FollowIn* Arena::CreateMaybeMessage< ::proto::FollowIn >(Arena* arena) {
  return Arena::CreateInternal< ::proto::FollowIn >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::FollowOut* Arena::CreateMaybeMessage< ::proto::FollowOut >(Arena* arena) {
  return Arena::CreateInternal< ::proto::FollowOut >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowIn* Arena::CreateMaybeMessage< ::proto::ShowIn >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ShowIn >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ShowOut* Arena::CreateMaybeMessage< ::proto::ShowOut >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ShowOut >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::LoginIn* Arena::CreateMaybeMessage< ::proto::LoginIn >(Arena* arena) {
  return Arena::CreateInternal< ::proto::LoginIn >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::LoginOut* Arena::CreateMaybeMessage< ::proto::LoginOut >(Arena* arena) {
  return Arena::CreateInternal< ::proto::LoginOut >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::LogoutIn* Arena::CreateMaybeMessage< ::proto::LogoutIn >(Arena* arena) {
  return Arena::CreateInternal< ::proto::LogoutIn >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::LogoutOut* Arena::CreateMaybeMessage< ::proto::LogoutOut >(Arena* arena) {
  return Arena::CreateInternal< ::proto::LogoutOut >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RegisterIn* Arena::CreateMaybeMessage< ::proto::RegisterIn >(Arena* arena) {
  return Arena::CreateInternal< ::proto::RegisterIn >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RegisterOut* Arena::CreateMaybeMessage< ::proto::RegisterOut >(Arena* arena) {
  return Arena::CreateInternal< ::proto::RegisterOut >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
